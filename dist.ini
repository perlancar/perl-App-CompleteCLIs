version=0.02

name=App-CompleteCLIs

[Rinci::ScriptFromFunc]

;; these are lower-level functions that accept words & cword, not word, we exclude them atm
;script= name=complete-bash-history, func=/Complete/Bash/History/complete_cmdline_from_hist, prefer_lite=1
;script= name=complete-getopt-long,  func=/Complete/Getopt/Long/complete_cli_arg, prefer_lite=1

script=                             func=/Complete/Dist/complete_dist, prefer_lite=1
script=                             func=/Complete/Dist/Zilla/complete_dzil_bundle, prefer_lite=1
script=                             func=/Complete/Dist/Zilla/complete_dzil_plugin, prefer_lite=1
script=                             func=/Complete/Dist/Zilla/complete_dzil_role, prefer_lite=1
script=                             func=/Complete/Module/complete_module, prefer_lite=1
script=                             func=/Complete/Pod/Weaver/complete_weaver_bundle, prefer_lite=1
script=                             func=/Complete/Pod/Weaver/complete_weaver_plugin, prefer_lite=1
script=                             func=/Complete/Pod/Weaver/complete_weaver_role, prefer_lite=1
script=                             func=/Complete/Pod/Weaver/complete_weaver_section, prefer_lite=1
script=                             func=/Complete/Riap/complete_riap_url, prefer_lite=1
script=                             func=/Complete/Unix/complete_uid, prefer_lite=1
script=                             func=/Complete/Unix/complete_gid, prefer_lite=1
script=                             func=/Complete/Unix/complete_user, prefer_lite=1
script=                             func=/Complete/Unix/complete_group, prefer_lite=1
script=                             func=/Complete/Unix/complete_pid, prefer_lite=1
script=                             func=/Complete/Unix/complete_proc_name, prefer_lite=1

; because in Perinci::CmdLine::Base, Complete::Util::complete_array_elem is
; mentioned, somehow perl creates the Complete::Util package and makes
; Perinci::Access::Lite not loading the script (because it sees that the package
; already exists). thus we force loading Complete::Util first before running
; Perinci::CmdLine::Lite.
script=                             func=/Complete/Util/complete_array_elem, prefer_lite=1, snippet_before_instantiate_cmdline=use Complete::Util;
script=                             func=/Complete/Util/complete_hash_key, prefer_lite=1, snippet_before_instantiate_cmdline=use Complete::Util;
script=                             func=/Complete/Util/complete_env, prefer_lite=1, snippet_before_instantiate_cmdline=use Complete::Util;
script=                             func=/Complete/Util/complete_file, prefer_lite=1, snippet_before_instantiate_cmdline=use Complete::Util;
script=                             func=/Complete/Util/complete_program, prefer_lite=1, snippet_before_instantiate_cmdline=use Complete::Util;

[@Author::PERLANCAR]
:version=0.23

[Prereqs]
;!lint-prereqs assume-used # spec
Rinci=1.1.0
;!lint-prereqs assume-used # spec
Complete=0.06

perl=5.010001

;!lint-prereqs assume-used # undetected, used via riap
Complete::Bash::History=0
;!lint-prereqs assume-used # undetected, used via riap
Complete::Dist=0
;!lint-prereqs assume-used # undetected, used via riap
Complete::Dist::Zilla=0
;!lint-prereqs assume-used # undetected, used via riap
Complete::Getopt::Long=0
;!lint-prereqs assume-used # undetected, used via riap
Complete::Pod::Weaver=0
;!lint-prereqs assume-used # undetected, used via riap
Complete::Riap=0
;!lint-prereqs assume-used # undetected, used via riap
Complete::Unix=0.03
;!lint-prereqs assume-used # undetected, used via riap
Complete::Util=0.21
